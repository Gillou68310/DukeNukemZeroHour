rspInitDl                           = 0x01001860; // type:data     size:0x28              (.data)   (src/spseg1/spinit.c)
rdpInitDl                           = 0x01001888; // type:data     size:0x78              (.data)   (src/spseg1/spinit.c)
leoBootID                           = 0x800001A0;
osTvType                            = 0x80000300;
osRomType                           = 0x80000304;
osRomBase                           = 0x80000308;
osResetType                         = 0x8000030C;
osCicId                             = 0x80000310;
osVersion                           = 0x80000314;
osMemSize                           = 0x80000318;
osAppNMIBuffer                      = 0x8000031C;
start                               = 0x80000400; // type:function                        (.text)   (src/codeseg0/entrypoint.s)
func_80000450                       = 0x80000450; // type:function size:0xB8              (.text)   (src/codeseg0/main.c)
func_80000508                       = 0x80000508; // type:function size:0xD0     (static) (.text)   (src/codeseg0/main.c)
func_800005D8                       = 0x800005D8; // type:function size:0x38     (static) (.text)   (src/codeseg0/main.c)
func_80000610                       = 0x80000610; // type:function size:0x14              (.text)   (src/codeseg0/main.c)
func_80000624                       = 0x80000624; // type:function size:0x54              (.text)   (src/codeseg0/main.c)
func_80000678                       = 0x80000678; // type:function size:0x3C     (static) (.text)   (src/codeseg0/main.c)
func_800006B4                       = 0x800006B4; // type:function size:0x68     (static) (.text)   (src/codeseg0/main.c)
func_8000071C                       = 0x8000071C; // type:function size:0x1F0    (static) (.text)   (src/codeseg0/main.c)
boot                                = 0x8000090C; // type:function size:0xC4              (.text)   (src/codeseg0/main.c)
idleLoop                            = 0x800009D0; // type:function size:0x9C     (static) (.text)   (src/codeseg0/main.c)
readRom                             = 0x80000A6C; // type:function size:0x28              (.text)   (src/codeseg0/main.c)
func_80000A94                       = 0x80000A94; // type:function size:0xD4              (.text)   (src/codeseg0/main.c)
clearDepthBuffer                    = 0x80000B68; // type:function size:0x10C    (static) (.text)   (src/codeseg0/main.c)
func_80000C74                       = 0x80000C74; // type:function size:0x168             (.text)   (src/codeseg0/main.c)
func_80000DDC                       = 0x80000DDC; // type:function size:0x124    (static) (.text)   (src/codeseg0/main.c)
func_80000F00                       = 0x80000F00; // type:function size:0x68     (static) (.text)   (src/codeseg0/main.c)
func_80000F68                       = 0x80000F68; // type:function size:0xD0     (static) (.text)   (src/codeseg0/main.c)
func_80001038                       = 0x80001038; // type:function size:0x774    (static) (.text)   (src/codeseg0/main.c)
func_800017AC                       = 0x800017AC; // type:function size:0x1BC    (static) (.text)   (src/codeseg0/main.c)
setupSegments                       = 0x80001968; // type:function size:0x190    (static) (.text)   (src/codeseg0/main.c)
func_80001AF8                       = 0x80001AF8; // type:function size:0x30     (static) (.text)   (src/codeseg0/main.c)
createGfxTask                       = 0x80001B28; // type:function size:0x1D4    (static) (.text)   (src/codeseg0/main.c)
func_80001CFC                       = 0x80001CFC; // type:function size:0x48              (.text)   (src/codeseg0/main.c)
func_80001D44                       = 0x80001D44; // type:function size:0x1FC    (static) (.text)   (src/codeseg0/main.c)
func_80001F40                       = 0x80001F40; // type:function size:0x6C              (.text)   (src/codeseg0/main.c)
func_80001FAC                       = 0x80001FAC; // type:function size:0x68              (.text)   (src/codeseg0/main.c)
func_80002390                       = 0x80002390; // type:function size:0x104             (.text)   (src/codeseg0/main.c)
func_80002494                       = 0x80002494; // type:function size:0xB4     (static) (.text)   (src/codeseg0/main.c)
mainLoop                            = 0x80002548; // type:function size:0xCB0             (.text)   (src/codeseg0/main.c)
func_800034F4                       = 0x800034F4; // type:function size:0x1E8    (static) (.text)   (src/codeseg0/main.c)
func_800036DC                       = 0x800036DC; // type:function size:0x264    (static) (.text)   (src/codeseg0/main.c)
grPositionF                         = 0x80005150; // type:function size:0x214             (.text)   (src/codeseg0/graphics.c)
grPosition                          = 0x80005364; // type:function size:0x58              (.text)   (src/codeseg0/graphics.c)
grPerspectiveF                      = 0x800053BC; // type:function size:0x1C8             (.text)   (src/codeseg0/graphics.c)
grPerspective                       = 0x80005584; // type:function size:0x50              (.text)   (src/codeseg0/graphics.c)
grNormalize                         = 0x800055D4; // type:function size:0xAC              (.text)   (src/codeseg0/graphics.c)
grTranslateF                        = 0x80005680; // type:function size:0x64              (.text)   (src/codeseg0/graphics.c)
grTranslate                         = 0x800056E4; // type:function size:0x38              (.text)   (src/codeseg0/graphics.c)
grScaleF                            = 0x8000571C; // type:function size:0x74              (.text)   (src/codeseg0/graphics.c)
grScale                             = 0x80005790; // type:function size:0x38              (.text)   (src/codeseg0/graphics.c)
grMtxCatL                           = 0x800057C8; // type:function size:0x78              (.text)   (src/codeseg0/graphics.c)
grMtxCatF                           = 0x80005840; // type:function size:0xDC              (.text)   (src/codeseg0/graphics.c)
grMtxXFMF                           = 0x8000591C; // type:function size:0xB8              (.text)   (src/codeseg0/graphics.c)
grMtxF2L                            = 0x800059D4; // type:function size:0xA4              (.text)   (src/codeseg0/graphics.c)
grMtxL2F                            = 0x80005A78; // type:function size:0xAC              (.text)   (src/codeseg0/graphics.c)
grMtxIdentF                         = 0x80005B24; // type:function size:0x54              (.text)   (src/codeseg0/graphics.c)
grLookAtF                           = 0x80005B78; // type:function size:0x3FC             (.text)   (src/codeseg0/graphics.c)
grLookAtReflectF                    = 0x80005F74; // type:function size:0x600             (.text)   (src/codeseg0/graphics.c)
grLookAtReflect                     = 0x80006574; // type:function size:0x70              (.text)   (src/codeseg0/graphics.c)
dmaRead                             = 0x800065F0; // type:function size:0xB8              (.text)   (src/codeseg0/71F0.c)
debugMenu                           = 0x8007BFC0;
Fenvelope                           = 0x800A4980;
MusInitialize                       = 0x800A4ACC;
MusSetMasterVolume                  = 0x800A4D64;
MusStartSong                        = 0x800A4D90;
MusStartSongFromMarker              = 0x800A4DC0;
MusStartEffect                      = 0x800A5010;
MusStartEffect2                     = 0x800A5090;
MusStop                             = 0x800A51A8;
MusAsk                              = 0x800A5274;
MusHandleStop                       = 0x800A52F4;
MusHandleAsk                        = 0x800A53A8;
MusHandleSetVolume                  = 0x800A5400;
MusHandleSetPan                     = 0x800A5460;
MusHandleSetFreqOffset              = 0x800A54D0;
MusHandleSetTempo                   = 0x800A5540;
MusHandleSetReverb                  = 0x800A55CC;
MusPtrBankInitialize                = 0x800A5654;
MusPtrBankSetSingle                 = 0x800A5690;
MusPtrBankSetCurrent                = 0x800A56B8;
MusPtrBankGetCurrent                = 0x800A56DC;
MusHandleGetPtrBank                 = 0x800A56E8;
MusHandlePause                      = 0x800A5744;
MusHandleUnPause                    = 0x800A5768;
MusSetFxType                        = 0x800A5790;
MusSetSongFxChange                  = 0x800A57C0;
MusFxBankInitialize                 = 0x800A581C;
MusFxBankNumberOfEffects            = 0x800A58A0;
MusFxBankSetCurrent                 = 0x800A58A8;
MusFxBankSetSingle                  = 0x800A58B4;
MusFxBankGetCurrent                 = 0x800A58C0;
MusFxBankSetPtrBank                 = 0x800A58CC;
MusFxBankGetPtrBank                 = 0x800A58D4;
MusSetScheduler                     = 0x800A58DC;
MusHandleWaveCount                  = 0x800A58E8;
MusHandleWaveAddress                = 0x800A594C;
MusSetMarkerCallback                = 0x800A59C4;
__MusIntFifoOpen                    = 0x800A59D0;
__MusIntFifoProcessCommand          = 0x800A5A34;
__MusIntFifoAddCommand              = 0x800A5AB4;
__MusIntMain                        = 0x800A5B4C;
__MusIntGetNewNote                  = 0x800A5E44;
__MusIntFlushPending                = 0x800A63B0;
__MusIntSetVolumeAndPan             = 0x800A643C;
__MusIntSetPitch                    = 0x800A65A0;
__MusIntInitEnvelope                = 0x800A66B4;
__MusIntProcessEnvelope             = 0x800A6724;
__MusIntInitSweep                   = 0x800A6918;
__MusIntProcessSweep                = 0x800A6934;
__MusIntProcessWobble               = 0x800A69EC;
__MusIntProcessVibrato              = 0x800A6A44;
__MusIntProcessContinuousVolume     = 0x800A6AA8;
__MusIntProcessContinuousPitchBend  = 0x800A6B6C;
__MusIntPowerOf2                    = 0x800A6C80;
__MusIntRemapPtrBank                = 0x800A6E14;
__MusIntRandom                      = 0x800A6FAC;
__MusIntInitialiseChannel           = 0x800A7040;
__MusIntFindChannel                 = 0x800A717C;
__MusIntRemapPtrs                   = 0x800A7344;
__MusIntStartEffect                 = 0x800A737C;
__MusIntFindChannelAndStart         = 0x800A742C;
__MusIntStartSong                   = 0x800A75D4;
__MusIntHandleSetFlag               = 0x800A7840;
Fstop                               = 0x800A7894;
Fwave                               = 0x800A78B4;
Fport                               = 0x800A78E4;
Fportoff                            = 0x800A7904;
Fdefa                               = 0x800A7910;
Ftempo                              = 0x800A7A38;
Fendit                              = 0x800A7B1C;
Fcutoff                             = 0x800A7B30;
Fvibup                              = 0x800A7B54;
Fvibdown                            = 0x800A7BC4;
Fviboff                             = 0x800A7C38;
Flength                             = 0x800A7C48;
Fignore                             = 0x800A7C78;
Ftrans                              = 0x800A7C88;
Fignore_trans                       = 0x800A7C98;
Fdistort                            = 0x800A7CA8;
Fenvoff                             = 0x800A7D00;
Fenvon                              = 0x800A7D10;
Ftroff                              = 0x800A7D1C;
Ftron                               = 0x800A7D2C;
Ffor                                = 0x800A7D38;
Fnext                               = 0x800A7DA4;
Fwobble                             = 0x800A7E40;
Fwobbleoff                          = 0x800A7E68;
Fvelon                              = 0x800A7E74;
Fveloff                             = 0x800A7E84;
Fvelocity                           = 0x800A7E90;
Fpan                                = 0x800A7EA4;
Fstereo                             = 0x800A7EB8;
Fdrums                              = 0x800A7EC0;
Fdrumsoff                           = 0x800A7F08;
Fprint                              = 0x800A7F14;
Fgoto                               = 0x800A7F1C;
Freverb                             = 0x800A7F8C;
FrandNote                           = 0x800A7F9C;
FrandVolume                         = 0x800A7FEC;
FrandPan                            = 0x800A803C;
Fvolume                             = 0x800A808C;
Fstartfx                            = 0x800A809C;
Fbendrange                          = 0x800A816C;
Fsweep                              = 0x800A81A8;
Fchangefx                           = 0x800A81B8;
Fmarker                             = 0x800A81FC;
Flength0                            = 0x800A826C;
CustomInit                          = 0x800A8280;
CustomSynNew                        = 0x800A82D8;
CustomAllocFX                       = 0x800A85A4;
CustomFxNew                         = 0x800A8638;
CustomFxSet                         = 0x800A8784;
SetForCustom                        = 0x800A8A64;
GetFxMostSections                   = 0x800A8A7C;
GetFxLongest                        = 0x800A8AC0;
ChangeCustomEffect                  = 0x800A8B04;
__MusIntDmaInit                     = 0x800A8B60;
__MusIntDmaProcess                  = 0x800A8CD4;
__CallBackDmaNew                    = 0x800A8DA4;
__CallBackDmaProcess                = 0x800A8DB0;
__MusIntDmaSample                   = 0x800A8E1C;
__MusIntSchedInit                   = 0x800A8FB0;
__OsSchedInstall                    = 0x800A8FBC;
__OsSchedWaitFrame                  = 0x800A9020;
__OsSchedDoTask                     = 0x800A9080;
__MusIntAudManInit                  = 0x800A9160;
__MusIntThreadProcess               = 0x800A9298;
__MusIntMemInit                     = 0x800A9420;
__MusIntMemMalloc                   = 0x800A946C;
__MusIntMemRemaining                = 0x800A949C;
__MusIntMemGetHeapAddr              = 0x800A94B4;
__MusIntMemSet                      = 0x800A94C0;
__MusIntMemMove                     = 0x800A94EC;
__MusIntSamplesInit                 = 0x800A9560;
__MusIntSamplesCurrent              = 0x800A95D8;
sqrtf                               = 0x800A9620; // type:function                        (.text)   (libreultra/src/gu/sqrtf.s)
__cosf                              = 0x800A9630; // type:function size:0x150             (.text)   (libreultra/src/gu/cosf.c)
coss                                = 0x800A9780; // type:function size:0x28              (.text)   (libreultra/src/gu/coss.c)
guLookAtF                           = 0x800A97B0; // type:function size:0x380             (.text)   (libreultra/src/gu/lookat.c)
guLookAt                            = 0x800A9B30; // type:function size:0x384             (.text)   (libreultra/src/gu/lookat.c)
guLookAtReflectF                    = 0x800A9EC0; // type:function size:0x578             (.text)   (libreultra/src/gu/lookatref.c)
guLookAtReflect                     = 0x800AA438; // type:function size:0x6C              (.text)   (libreultra/src/gu/lookatref.c)
guMtxF2L                            = 0x800AA4B0; // type:function size:0x98              (.text)   (libreultra/src/gu/mtxutil.c)
guMtxL2F                            = 0x800AA548; // type:function size:0xA8              (.text)   (libreultra/src/gu/mtxutil.c)
guMtxIdentF                         = 0x800AA5F0; // type:function size:0x50              (.text)   (libreultra/src/gu/mtxutil.c)
guMtxIdent                          = 0x800AA640; // type:function size:0xF0              (.text)   (libreultra/src/gu/mtxutil.c)
guMtxCatL                           = 0x800AA730; // type:function size:0x74              (.text)   (libreultra/src/gu/mtxcatl.c)
guMtxXFML                           = 0x800AA7A4; // type:function size:0x8C              (.text)   (libreultra/src/gu/mtxcatl.c)
guOrthoF                            = 0x800AA830; // type:function size:0x130             (.text)   (libreultra/src/gu/ortho.c)
guOrtho                             = 0x800AA960; // type:function size:0x14C             (.text)   (libreultra/src/gu/ortho.c)
guPerspectiveF                      = 0x800AAAB0; // type:function size:0x1B0             (.text)   (libreultra/src/gu/perspective.c)
guPerspective                       = 0x800AAC60; // type:function size:0x1C8             (.text)   (libreultra/src/gu/perspective.c)
guRotateRPYF                        = 0x800AAE30; // type:function size:0x188             (.text)   (libreultra/src/gu/rotateRPY.c)
guRotateRPY                         = 0x800AAFB8; // type:function size:0x18C             (.text)   (libreultra/src/gu/rotateRPY.c)
guScaleF                            = 0x800AB150; // type:function size:0x60              (.text)   (libreultra/src/gu/scale.c)
guScale                             = 0x800AB1B0; // type:function size:0x7C              (.text)   (libreultra/src/gu/scale.c)
__sinf                              = 0x800AB230; // type:function size:0x1A0             (.text)   (libreultra/src/gu/sinf.c)
sins                                = 0x800AB3D0; // type:function size:0x54              (.text)   (libreultra/src/gu/sins.c)
guTranslateF                        = 0x800AB430; // type:function size:0x54              (.text)   (libreultra/src/gu/translate.c)
guTranslate                         = 0x800AB484; // type:function size:0x70              (.text)   (libreultra/src/gu/translate.c)
guPositionF                         = 0x800AB500; // type:function size:0x1D8             (.text)   (libreultra/src/gu/position.c)
guPosition                          = 0x800AB6D8; // type:function size:0x1E0             (.text)   (libreultra/src/gu/position.c)
guRandom                            = 0x800AB8C0; // type:function size:0x2C              (.text)   (libreultra/src/gu/random.c)
osInvalDCache                       = 0x800AB8F0; // type:function                        (.text)   (libreultra/src/os/invaldcache.s)
osInvalICache                       = 0x800AB9A0; // type:function                        (.text)   (libreultra/src/os/invalicache.s)
osWritebackDCacheAll                = 0x800ABA80; // type:function                        (.text)   (libreultra/src/os/writebackdcacheall.s)
osCreateMesgQueue                   = 0x800ABAB0; // type:function size:0x24              (.text)   (libreultra/src/os/createmesgqueue.c)
osCreateThread                      = 0x800ABAE0; // type:function size:0xD0              (.text)   (libreultra/src/os/createthread.c)
osGetTime                           = 0x800ABBB0; // type:function size:0x84              (.text)   (libreultra/src/os/gettime.c)
osRecvMesg                          = 0x800ABC40; // type:function size:0x124             (.text)   (libreultra/src/os/recvmesg.c)
osSendMesg                          = 0x800ABD70; // type:function size:0x130             (.text)   (libreultra/src/os/sendmesg.c)
osSetThreadPri                      = 0x800ABEA0; // type:function size:0xC8              (.text)   (libreultra/src/os/setthreadpri.c)
osStartThread                       = 0x800ABF70; // type:function size:0x118             (.text)   (libreultra/src/os/startthread.c)
__osDequeueThread                   = 0x800AC090; // type:function size:0x34              (.text)   (libreultra/src/os/thread.c)
__osTimerServicesInit               = 0x800AC0D0; // type:function size:0x54              (.text)   (libreultra/src/os/timerintr.c)
__osTimerInterrupt                  = 0x800AC124; // type:function size:0x13C             (.text)   (libreultra/src/os/timerintr.c)
__osSetTimerIntr                    = 0x800AC260; // type:function size:0x60              (.text)   (libreultra/src/os/timerintr.c)
__osInsertTimer                     = 0x800AC2C0; // type:function size:0x108             (.text)   (libreultra/src/os/timerintr.c)
osVirtualToPhysical                 = 0x800AC3D0; // type:function size:0x54              (.text)   (libreultra/src/os/virtualtophysical.c)
alAdpcmPull                         = 0x800AC430; // type:function size:0x444             (.text)   (libreultra/src/audio/load.c)
alRaw16Pull                         = 0x800AC874; // type:function size:0x39C             (.text)   (libreultra/src/audio/load.c)
alLoadParam                         = 0x800ACC10; // type:function size:0x1AC             (.text)   (libreultra/src/audio/load.c)
_decodeChunk                        = 0x800ACDBC; // type:function size:0x178    (static) (.text)   (libreultra/src/audio/load.c)
alAuxBusPull                        = 0x800ACF40; // type:function size:0xDC              (.text)   (libreultra/src/audio/auxbus.c)
alAuxBusParam                       = 0x800AD01C; // type:function size:0x30              (.text)   (libreultra/src/audio/auxbus.c)
alFilterNew                         = 0x800AD050; // type:function size:0x1C              (.text)   (libreultra/src/audio/filter.c)
alMainBusPull                       = 0x800AD070; // type:function size:0x140             (.text)   (libreultra/src/audio/mainbus.c)
alMainBusParam                      = 0x800AD1B0; // type:function size:0x30              (.text)   (libreultra/src/audio/mainbus.c)
alResamplePull                      = 0x800AD1E0; // type:function size:0x1EC             (.text)   (libreultra/src/audio/resample.c)
alResampleParam                     = 0x800AD3CC; // type:function size:0xC0              (.text)   (libreultra/src/audio/resample.c)
alInit                              = 0x800AD490; // type:function size:0x2C              (.text)   (libreultra/src/audio/sl.c)
alClose                             = 0x800AD4BC; // type:function size:0x30              (.text)   (libreultra/src/audio/sl.c)
alLink                              = 0x800AD4EC; // type:function size:0x20              (.text)   (libreultra/src/audio/sl.c)
alUnlink                            = 0x800AD50C; // type:function size:0x30              (.text)   (libreultra/src/audio/sl.c)
alHeapInit                          = 0x800AD540; // type:function size:0x34              (.text)   (libreultra/src/audio/heapinit.c)
alHeapDBAlloc                       = 0x800AD580; // type:function size:0x48              (.text)   (libreultra/src/audio/heapalloc.c)
alCopy                              = 0x800AD5D0; // type:function size:0x34              (.text)   (libreultra/src/audio/copy.c)
alSynDelete                         = 0x800AD610; // type:function size:0x8               (.text)   (libreultra/src/audio/syndelete.c)
alSynAddPlayer                      = 0x800AD620; // type:function size:0x50              (.text)   (libreultra/src/audio/synaddplayer.c)
alSynAllocVoice                     = 0x800AD670; // type:function size:0x128             (.text)   (libreultra/src/audio/synallocvoice.c)
_allocatePVoice                     = 0x800AD798; // type:function size:0xB8              (.text)   (libreultra/src/audio/synallocvoice.c)
alSynStopVoice                      = 0x800AD850; // type:function size:0x7C              (.text)   (libreultra/src/audio/synstopvoice.c)
alSynStartVoice                     = 0x800AD8D0; // type:function size:0x94              (.text)   (libreultra/src/audio/synstartvoice.c)
alSynSetPitch                       = 0x800AD970; // type:function size:0x90              (.text)   (libreultra/src/audio/synsetpitch.c)
alSynSetVol                         = 0x800ADA00; // type:function size:0xB8              (.text)   (libreultra/src/audio/synsetvol.c)
alSynSetPan                         = 0x800ADAC0; // type:function size:0x90              (.text)   (libreultra/src/audio/synsetpan.c)
osAiGetLength                       = 0x800ADB50; // type:function size:0x10              (.text)   (libreultra/src/io/aigetlen.c)
osAiGetStatus                       = 0x800ADB60; // type:function size:0x10              (.text)   (libreultra/src/io/aigetstat.c)
osAiSetNextBuffer                   = 0x800ADB70; // type:function size:0x94              (.text)   (libreultra/src/io/aisetnextbuf.c)
osViSetMode                         = 0x800ADC10; // type:function size:0x4C              (.text)   (libreultra/src/io/visetmode.c)
osViBlack                           = 0x800ADC60; // type:function size:0x5C              (.text)   (libreultra/src/io/viblack.c)
osContStartQuery                    = 0x800ADCC0; // type:function size:0x80              (.text)   (libreultra/src/io/contquery.c)
osContGetQuery                      = 0x800ADD40; // type:function size:0x20              (.text)   (libreultra/src/io/contquery.c)
osContInit                          = 0x800ADD60; // type:function size:0x19C             (.text)   (libreultra/src/io/controller.c)
__osContGetInitData                 = 0x800ADEFC; // type:function size:0xB4              (.text)   (libreultra/src/io/controller.c)
__osPackRequestData                 = 0x800ADFB0; // type:function size:0xBC              (.text)   (libreultra/src/io/controller.c)
osEepromLongWrite                   = 0x800AE070; // type:function size:0xE4              (.text)   (libreultra/src/io/conteeplongwrite.c)
osEepromLongRead                    = 0x800AE160; // type:function size:0x70              (.text)   (libreultra/src/io/conteeplongread.c)
osEPiStartDma                       = 0x800AE1D0; // type:function size:0x94              (.text)   (libreultra/src/io/epidma.c)
osPiStartDma                        = 0x800AE270; // type:function size:0xA8              (.text)   (libreultra/src/io/pidma.c)
strchr                              = 0x800AE320; // type:function size:0x38              (.text)   (libreultra/src/libc/string.c)
strlen                              = 0x800AE358; // type:function size:0x24              (.text)   (libreultra/src/libc/string.c)
memcpy                              = 0x800AE37C; // type:function size:0x28              (.text)   (libreultra/src/libc/string.c)
sprintf                             = 0x800AE3B0; // type:function size:0x58              (.text)   (libreultra/src/libc/sprintf.c)
proutSprintf                        = 0x800AE408; // type:function size:0x34     (static) (.text)   (libreultra/src/libc/sprintf.c)
osCreateScheduler                   = 0x800AE440; // type:function size:0x148             (.text)   (libreultra/src/sched/sched.c)
osScAddClient                       = 0x800AE588; // type:function size:0x58              (.text)   (libreultra/src/sched/sched.c)
osScRemoveClient                    = 0x800AE5E0; // type:function size:0x90              (.text)   (libreultra/src/sched/sched.c)
osScGetCmdQ                         = 0x800AE670; // type:function size:0x8               (.text)   (libreultra/src/sched/sched.c)
__scMain                            = 0x800AE678; // type:function size:0x104    (static) (.text)   (libreultra/src/sched/sched.c)
__scHandleRetrace                   = 0x800AE77C; // type:function size:0x100    (static) (.text)   (libreultra/src/sched/sched.c)
__scHandleRSP                       = 0x800AE87C; // type:function size:0x110    (static) (.text)   (libreultra/src/sched/sched.c)
__scHandleRDP                       = 0x800AE98C; // type:function size:0xE0     (static) (.text)   (libreultra/src/sched/sched.c)
__scTaskReady                       = 0x800AEA6C; // type:function size:0x54              (.text)   (libreultra/src/sched/sched.c)
__scTaskComplete                    = 0x800AEAC0; // type:function size:0xB0     (static) (.text)   (libreultra/src/sched/sched.c)
__scAppendList                      = 0x800AEB70; // type:function size:0xAC     (static) (.text)   (libreultra/src/sched/sched.c)
__scExec                            = 0x800AEC1C; // type:function size:0x134    (static) (.text)   (libreultra/src/sched/sched.c)
__scYield                           = 0x800AED50; // type:function size:0x38     (static) (.text)   (libreultra/src/sched/sched.c)
__scSchedule                        = 0x800AED88; // type:function size:0x214    (static) (.text)   (libreultra/src/sched/sched.c)
init_lpfilter                       = 0x800AEFA0; // type:function size:0xA4              (.text)   (libreultra/src/audio/drvrNew.c)
alFxNew                             = 0x800AF044; // type:function size:0x498             (.text)   (libreultra/src/audio/drvrNew.c)
alEnvmixerNew                       = 0x800AF4DC; // type:function size:0xB8              (.text)   (libreultra/src/audio/drvrNew.c)
alLoadNew                           = 0x800AF594; // type:function size:0xB0              (.text)   (libreultra/src/audio/drvrNew.c)
alResampleNew                       = 0x800AF644; // type:function size:0x8C              (.text)   (libreultra/src/audio/drvrNew.c)
alAuxBusNew                         = 0x800AF6D0; // type:function size:0x5C              (.text)   (libreultra/src/audio/drvrNew.c)
alMainBusNew                        = 0x800AF72C; // type:function size:0x5C              (.text)   (libreultra/src/audio/drvrNew.c)
alSaveNew                           = 0x800AF788; // type:function size:0x44              (.text)   (libreultra/src/audio/drvrNew.c)
alEnvmixerPull                      = 0x800AF7D0; // type:function size:0x500             (.text)   (libreultra/src/audio/env.c)
alEnvmixerParam                     = 0x800AFCD0; // type:function size:0xD4              (.text)   (libreultra/src/audio/env.c)
_pullSubFrame                       = 0x800AFDA4; // type:function size:0x2D4    (static) (.text)   (libreultra/src/audio/env.c)
_frexpf                             = 0x800B0078; // type:function size:0xE0              (.text)   (libreultra/src/audio/env.c)
_ldexpf                             = 0x800B0158; // type:function size:0x24              (.text)   (libreultra/src/audio/env.c)
_getRate                            = 0x800B017C; // type:function size:0x280    (static) (.text)   (libreultra/src/audio/env.c)
_getVol                             = 0x800B03FC; // type:function size:0x84     (static) (.text)   (libreultra/src/audio/env.c)
alFxPull                            = 0x800B0480; // type:function size:0x374             (.text)   (libreultra/src/audio/reverb.c)
alFxParam                           = 0x800B07F4; // type:function size:0x14              (.text)   (libreultra/src/audio/reverb.c)
alFxParamHdl                        = 0x800B0808; // type:function size:0x1F0             (.text)   (libreultra/src/audio/reverb.c)
_loadOutputBuffer                   = 0x800B09F8; // type:function size:0x218             (.text)   (libreultra/src/audio/reverb.c)
_loadBuffer                         = 0x800B0C10; // type:function size:0x170             (.text)   (libreultra/src/audio/reverb.c)
_saveBuffer                         = 0x800B0D80; // type:function size:0x170             (.text)   (libreultra/src/audio/reverb.c)
_filterBuffer                       = 0x800B0EF0; // type:function size:0x9C              (.text)   (libreultra/src/audio/reverb.c)
_doModFunc                          = 0x800B0F8C; // type:function size:0x8C              (.text)   (libreultra/src/audio/reverb.c)
alSavePull                          = 0x800B1020; // type:function size:0xA8              (.text)   (libreultra/src/audio/save.c)
alSaveParam                         = 0x800B10C8; // type:function size:0x28              (.text)   (libreultra/src/audio/save.c)
alSynSetFXMix                       = 0x800B10F0; // type:function size:0xA0              (.text)   (libreultra/src/audio/synsetfxmix.c)
alSynNew                            = 0x800B1190; // type:function size:0x2CC             (.text)   (libreultra/src/audio/synthesizer.c)
alAudioFrame                        = 0x800B145C; // type:function size:0x1B0             (.text)   (libreultra/src/audio/synthesizer.c)
__allocParam                        = 0x800B160C; // type:function size:0x2C              (.text)   (libreultra/src/audio/synthesizer.c)
__freeParam                         = 0x800B1638; // type:function size:0x18              (.text)   (libreultra/src/audio/synthesizer.c)
_collectPVoices                     = 0x800B1650; // type:function size:0x54              (.text)   (libreultra/src/audio/synthesizer.c)
_freePVoice                         = 0x800B16A4; // type:function size:0x40              (.text)   (libreultra/src/audio/synthesizer.c)
_timeToSamplesNoRound               = 0x800B16E4; // type:function size:0x48     (static) (.text)   (libreultra/src/audio/synthesizer.c)
_timeToSamples                      = 0x800B172C; // type:function size:0x4C              (.text)   (libreultra/src/audio/synthesizer.c)
__nextSampleTime                    = 0x800B1778; // type:function size:0x54     (static) (.text)   (libreultra/src/audio/synthesizer.c)
osAiSetFrequency                    = 0x800B17D0; // type:function size:0x118             (.text)   (libreultra/src/io/aisetfreq.c)
osCartRomInit                       = 0x800B18F0; // type:function size:0x178             (.text)   (libreultra/src/io/cartrominit.c)
osEepromProbe                       = 0x800B1A70; // type:function size:0x74              (.text)   (libreultra/src/io/conteepprobe.c)
osEepromRead                        = 0x800B1AF0; // type:function size:0x198             (.text)   (libreultra/src/io/conteepread.c)
__osPackEepReadData                 = 0x800B1C88; // type:function size:0x88     (static) (.text)   (libreultra/src/io/conteepread.c)
osEepromWrite                       = 0x800B1D10; // type:function size:0x168             (.text)   (libreultra/src/io/conteepwrite.c)
__osPackEepWriteData                = 0x800B1E78; // type:function size:0xA8     (static) (.text)   (libreultra/src/io/conteepwrite.c)
__osEepStatus                       = 0x800B1F20; // type:function size:0x19C             (.text)   (libreultra/src/io/conteepwrite.c)
osContStartReadData                 = 0x800B20C0; // type:function size:0x88              (.text)   (libreultra/src/io/contreaddata.c)
osContGetReadData                   = 0x800B2148; // type:function size:0x9C              (.text)   (libreultra/src/io/contreaddata.c)
__osPackReadData                    = 0x800B21E4; // type:function size:0xB8     (static) (.text)   (libreultra/src/io/contreaddata.c)
__osMotorAccess                     = 0x800B22A0; // type:function size:0x144             (.text)   (libreultra/src/io/motor.c)
osMotorInit                         = 0x800B23E4; // type:function size:0x248             (.text)   (libreultra/src/io/motor.c)
osPfsAllocateFile                   = 0x800B2630; // type:function size:0x30C             (.text)   (libreultra/src/io/pfsallocatefile.c)
__osPfsDeclearPage                  = 0x800B293C; // type:function size:0x118             (.text)   (libreultra/src/io/pfsallocatefile.c)
osPfsDeleteFile                     = 0x800B2A60; // type:function size:0x1AC             (.text)   (libreultra/src/io/pfsdeletefile.c)
__osPfsReleasePages                 = 0x800B2C0C; // type:function size:0x68              (.text)   (libreultra/src/io/pfsdeletefile.c)
osPfsFileState                      = 0x800B2C80; // type:function size:0x18C             (.text)   (libreultra/src/io/pfsfilestate.c)
osPfsFreeBlocks                     = 0x800B2E10; // type:function size:0x10C             (.text)   (libreultra/src/io/pfsfreeblocks.c)
osPfsInitPak                        = 0x800B2F20; // type:function size:0x1F8             (.text)   (libreultra/src/io/pfsinitpak.c)
__osPfsCheckRamArea                 = 0x800B3118; // type:function size:0xCC     (static) (.text)   (libreultra/src/io/pfsinitpak.c)
osPfsNumFiles                       = 0x800B31F0; // type:function size:0xF8              (.text)   (libreultra/src/io/pfsnumfiles.c)
osPfsReadWriteFile                  = 0x800B32F0; // type:function size:0x434             (.text)   (libreultra/src/io/pfsreadwritefile.c)
osPfsRepairId                       = 0x800B3730; // type:function size:0x58              (.text)   (libreultra/src/io/pfsrepairid.c)
osPfsFindFile                       = 0x800B3790; // type:function size:0x1A0             (.text)   (libreultra/src/io/pfssearchfile.c)
__osPfsSelectBank                   = 0x800B3930; // type:function size:0x64              (.text)   (libreultra/src/io/pfsselectbank.c)
osCreatePiManager                   = 0x800B39A0; // type:function size:0x190             (.text)   (libreultra/src/io/pimgr.c)
osPiRawStartDma                     = 0x800B3B30; // type:function size:0xD0              (.text)   (libreultra/src/io/pirawdma.c)
__osSiRawStartDma                   = 0x800B3C00; // type:function size:0xA4              (.text)   (libreultra/src/io/sirawdma.c)
osCreateViManager                   = 0x800B3CB0; // type:function size:0x1A0             (.text)   (libreultra/src/io/vimgr.c)
viMgrMain                           = 0x800B3E50; // type:function size:0x198    (static) (.text)   (libreultra/src/io/vimgr.c)
osViSetSpecialFeatures              = 0x800B3FF0; // type:function size:0x164             (.text)   (libreultra/src/io/visetspecial.c)
__osViSwapContext                   = 0x800B4160; // type:function size:0x308             (.text)   (libreultra/src/io/viswapcontext.c)
osAfterPreNMI                       = 0x800B4470; // type:function size:0x1C              (.text)   (libreultra/src/os/afterprenmi.c)
__osExceptionPreamble               = 0x800B4490; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
__osException                       = 0x800B44A0; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
send_mesg                           = 0x800B4A1C; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
__osEnqueueAndYield                 = 0x800B4B0C; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
__osEnqueueThread                   = 0x800B4C14; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
__osPopThread                       = 0x800B4C5C; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
__osDispatchThread                  = 0x800B4C6C; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
__osCleanupThread                   = 0x800B4DE8; // type:function                        (.text)   (libreultra/src/os/exceptasm.s)
osInitialize                        = 0x800B4E00; // type:function size:0x228             (.text)   (libreultra/src/os/initialize.c)
__createSpeedParam                  = 0x800B5028; // type:function size:0xB8              (.text)   (libreultra/src/os/initialize.c)
__osDisableInt                      = 0x800B50E0; // type:function                        (.text)   (libreultra/src/os/interrupt.s)
__osRestoreInt                      = 0x800B5150; // type:function                        (.text)   (libreultra/src/os/interrupt.s)
osSetEventMesg                      = 0x800B5170; // type:function size:0xAC              (.text)   (libreultra/src/os/seteventmesg.c)
guMtxCatF                           = 0x800B5220; // type:function size:0xDC              (.text)   (libreultra/src/gu/mtxcatf.c)
guMtxXFMF                           = 0x800B52FC; // type:function size:0xAC              (.text)   (libreultra/src/gu/mtxcatf.c)
__osGetCause                        = 0x800B53B0; // type:function                        (.text)   (libreultra/src/os/getcause.s)
osGetCount                          = 0x800B53C0; // type:function                        (.text)   (libreultra/src/os/getcount.s)
__osGetSR                           = 0x800B53D0; // type:function                        (.text)   (libreultra/src/os/getsr.s)
__osProbeTLB                        = 0x800B53E0; // type:function                        (.text)   (libreultra/src/os/probetlb.s)
osSetIntMask                        = 0x800B54A0; // type:function                        (.text)   (libreultra/src/os/setintmask.s)
__osSetCompare                      = 0x800B5540; // type:function                        (.text)   (libreultra/src/os/setcompare.s)
__osSetFpcCsr                       = 0x800B5550; // type:function                        (.text)   (libreultra/src/os/setfpccsr.s)
__osSetSR                           = 0x800B5560; // type:function                        (.text)   (libreultra/src/os/setsr.s)
osUnmapTLBAll                       = 0x800B5570; // type:function                        (.text)   (libreultra/src/os/unmaptlball.s)
osWritebackDCache                   = 0x800B55C0; // type:function                        (.text)   (libreultra/src/os/writebackdcache.s)
osMapTLBRdb                         = 0x800B5640; // type:function                        (.text)   (libreultra/src/os/maptlbrdb.s)
osDestroyThread                     = 0x800B56A0; // type:function size:0xCC              (.text)   (libreultra/src/os/destroythread.c)
osGetThreadPri                      = 0x800B5770; // type:function size:0x18              (.text)   (libreultra/src/os/getthreadpri.c)
osJamMesg                           = 0x800B5790; // type:function size:0x134             (.text)   (libreultra/src/os/jammesg.c)
osSetTimer                          = 0x800B58D0; // type:function size:0x94              (.text)   (libreultra/src/os/settimer.c)
__assert                            = 0x800B5970; // type:function size:0x8               (.text)   (src/codeseg0/assert.c)
alSynAllocFX                        = 0x800B5980; // type:function size:0x94              (.text)   (libreultra/src/audio/synallocfx.c)
__osAiDeviceBusy                    = 0x800B5A20; // type:function size:0x14              (.text)   (libreultra/src/io/ai.c)
osDpSetNextBuffer                   = 0x800B5A40; // type:function size:0x98              (.text)   (libreultra/src/io/dpsetnextbuf.c)
__osSpSetPc                         = 0x800B5AE0; // type:function size:0x30              (.text)   (libreultra/src/io/spsetpc.c)
osSpTaskLoad                        = 0x800B5B10; // type:function size:0x20C             (.text)   (libreultra/src/io/sptask.c)
osSpTaskStartGo                     = 0x800B5D1C; // type:function size:0x2C              (.text)   (libreultra/src/io/sptask.c)
osSpTaskYield                       = 0x800B5D50; // type:function size:0x1C              (.text)   (libreultra/src/io/sptaskyield.c)
osSpTaskYielded                     = 0x800B5D70; // type:function size:0x4C              (.text)   (libreultra/src/io/sptaskyielded.c)
__osViInit                          = 0x800B5DC0; // type:function size:0x104             (.text)   (libreultra/src/io/vi.c)
__osViGetCurrentContext             = 0x800B5ED0; // type:function size:0xC               (.text)   (libreultra/src/io/vigetcurrcontext.c)
osViGetCurrentFramebuffer           = 0x800B5EE0; // type:function size:0x38              (.text)   (libreultra/src/io/vigetcurrframebuf.c)
osViGetNextFramebuffer              = 0x800B5F20; // type:function size:0x38              (.text)   (libreultra/src/io/vigetnextframebuf.c)
osViSetEvent                        = 0x800B5F60; // type:function size:0x58              (.text)   (libreultra/src/io/visetevent.c)
osViSwapBuffer                      = 0x800B5FC0; // type:function size:0x44              (.text)   (libreultra/src/io/viswapbuf.c)
__osSiCreateAccessQueue             = 0x800B6010; // type:function size:0x54              (.text)   (libreultra/src/io/siacs.c)
__osSiGetAccess                     = 0x800B6064; // type:function size:0x6C              (.text)   (libreultra/src/io/siacs.c)
__osSiRelAccess                     = 0x800B60D0; // type:function size:0x28              (.text)   (libreultra/src/io/siacs.c)
osPiGetCmdQueue                     = 0x800B6100; // type:function size:0x20              (.text)   (libreultra/src/io/pigetcmdq.c)
__osPiCreateAccessQueue             = 0x800B6120; // type:function size:0x54              (.text)   (libreultra/src/io/piacs.c)
__osPiGetAccess                     = 0x800B6174; // type:function size:0x6C              (.text)   (libreultra/src/io/piacs.c)
__osPiRelAccess                     = 0x800B61E0; // type:function size:0x28              (.text)   (libreultra/src/io/piacs.c)
bcmp                                = 0x800B6210; // type:function                        (.text)   (libreultra/src/libc/bcmp.s)
bcopy                               = 0x800B6320; // type:function                        (.text)   (libreultra/src/libc/bcopy.s)
bzero                               = 0x800B6640; // type:function                        (.text)   (libreultra/src/libc/bzero.s)
_Printf                             = 0x800B66E0; // type:function size:0x570             (.text)   (libreultra/src/libc/xprintf.c)
_Putfld                             = 0x800B6C50; // type:function size:0x4BC    (static) (.text)   (libreultra/src/libc/xprintf.c)
__osSumcalc                         = 0x800B7110; // type:function size:0x34              (.text)   (libreultra/src/io/contpfs.c)
__osIdCheckSum                      = 0x800B7144; // type:function size:0x44              (.text)   (libreultra/src/io/contpfs.c)
__osRepairPackId                    = 0x800B7188; // type:function size:0x2EC             (.text)   (libreultra/src/io/contpfs.c)
__osCheckPackId                     = 0x800B7474; // type:function size:0x164             (.text)   (libreultra/src/io/contpfs.c)
__osGetId                           = 0x800B75D8; // type:function size:0x1CC             (.text)   (libreultra/src/io/contpfs.c)
__osCheckId                         = 0x800B77A4; // type:function size:0xB8              (.text)   (libreultra/src/io/contpfs.c)
__osPfsRWInode                      = 0x800B785C; // type:function size:0x338             (.text)   (libreultra/src/io/contpfs.c)
__osContRamRead                     = 0x800B7BA0; // type:function size:0x1FC             (.text)   (libreultra/src/io/contramread.c)
__osContRamWrite                    = 0x800B7DA0; // type:function size:0x21C             (.text)   (libreultra/src/io/contramwrite.c)
__osContAddressCrc                  = 0x800B7FC0; // type:function size:0x6C              (.text)   (libreultra/src/io/crc.c)
__osContDataCrc                     = 0x800B802C; // type:function size:0x7C              (.text)   (libreultra/src/io/crc.c)
__osDevMgrMain                      = 0x800B80B0; // type:function size:0x3B8             (.text)   (libreultra/src/io/devmgr.c)
osEPiRawStartDma                    = 0x800B8470; // type:function size:0x1EC             (.text)   (libreultra/src/io/epirawdma.c)
osEPiRawReadIo                      = 0x800B8660; // type:function size:0x168             (.text)   (libreultra/src/io/epirawread.c)
osEPiRawWriteIo                     = 0x800B87D0; // type:function size:0x164             (.text)   (libreultra/src/io/epirawwrite.c)
osPfsChecker                        = 0x800B8940; // type:function size:0x460             (.text)   (libreultra/src/io/pfschecker.c)
corrupted_init                      = 0x800B8DA0; // type:function size:0x158             (.text)   (libreultra/src/io/pfschecker.c)
corrupted                           = 0x800B8EF8; // type:function size:0x168             (.text)   (libreultra/src/io/pfschecker.c)
__osPfsGetStatus                    = 0x800B9060; // type:function size:0xF0              (.text)   (libreultra/src/io/pfsgetstatus.c)
__osPfsRequestOneChannel            = 0x800B9150; // type:function size:0x94              (.text)   (libreultra/src/io/pfsgetstatus.c)
__osPfsGetOneChannelData            = 0x800B91E4; // type:function size:0x80              (.text)   (libreultra/src/io/pfsgetstatus.c)
__osSiRawReadIo                     = 0x800B9270; // type:function size:0x4C              (.text)   (libreultra/src/io/sirawread.c)
__osSiRawWriteIo                    = 0x800B92C0; // type:function size:0x48              (.text)   (libreultra/src/io/sirawwrite.c)
__osSpRawStartDma                   = 0x800B9310; // type:function size:0x8C              (.text)   (libreultra/src/io/sprawdma.c)
__osResetGlobalIntMask              = 0x800B93A0; // type:function size:0x48              (.text)   (libreultra/src/os/resetglobalintmask.c)
__osSetGlobalIntMask                = 0x800B93F0; // type:function size:0x40              (.text)   (libreultra/src/os/setglobalintmask.c)
osYieldThread                       = 0x800B9430; // type:function size:0x48              (.text)   (libreultra/src/os/yieldthread.c)
__osDpDeviceBusy                    = 0x800B9480; // type:function size:0x18              (.text)   (libreultra/src/io/dp.c)
__osSpDeviceBusy                    = 0x800B94A0; // type:function size:0x18              (.text)   (libreultra/src/io/sp.c)
__osSpGetStatus                     = 0x800B94C0; // type:function size:0x10              (.text)   (libreultra/src/io/spgetstat.c)
__osSpSetStatus                     = 0x800B94D0; // type:function size:0x10              (.text)   (libreultra/src/io/spsetstat.c)
__osSiDeviceBusy                    = 0x800B94E0; // type:function size:0x18              (.text)   (libreultra/src/io/si.c)
osPfsIsPlug                         = 0x800B9500; // type:function size:0x17C             (.text)   (libreultra/src/io/pfsisplug.c)
__osPfsRequestData                  = 0x800B967C; // type:function size:0xA4              (.text)   (libreultra/src/io/pfsisplug.c)
__osPfsGetInitData                  = 0x800B9720; // type:function size:0xB4              (.text)   (libreultra/src/io/pfsisplug.c)
_Litob                              = 0x800B97E0; // type:function size:0x244             (.text)   (libreultra/src/libc/xlitob.c)
_Ldtob                              = 0x800B9A30; // type:function size:0x440             (.text)   (libreultra/src/libc/xldtob.c)
_Ldunscale                          = 0x800B9E70; // type:function size:0x98     (static) (.text)   (libreultra/src/libc/xldtob.c)
_Genld                              = 0x800B9F08; // type:function size:0x5A0    (static) (.text)   (libreultra/src/libc/xldtob.c)
ldiv                                = 0x800BA4B0; // type:function size:0x84              (.text)   (libreultra/src/libc/ldiv.c)
lldiv                               = 0x800BA534; // type:function size:0x134             (.text)   (libreultra/src/libc/ldiv.c)
sqrt                                = 0x800BA670;
strcmp                              = 0x800BA890;
strcpy                              = 0x800BA9A0;
toupper                             = 0x800BAA70;
__matherr                           = 0x800BAAA0;
__cmpdi2                            = 0x800BAB10;
__ucmpdi2                           = 0x800BAB50;
__muldi3                            = 0x800BAB80;
div64_64                            = 0x800BABB8;
div64_32                            = 0x800BACB4;
__divdi3                            = 0x800BAD80;
__moddi3                            = 0x800BAE30;
__udivdi3                           = 0x800BAEF0;
__umoddi3                           = 0x800BAF10;
__fixsfdi                           = 0x800BAF50;
__floatdisf                         = 0x800BB040;
_matherr                            = 0x800BB140;
rspbootTextStart                    = 0x800BB150; // type:function size:0xD0
gspF3DLX2_NoN_fifoTextStart         = 0x800BB220; // type:function size:0x1390
aspMainTextStart                    = 0x800BC5B0; // type:function size:0xE20
gScreenWidth                        = 0x800BD3D4; // type:data     size:0x4               (.data)   (src/codeseg0/main.c)
gScreenHeight                       = 0x800BD3D8; // type:data     size:0x4               (.data)   (src/codeseg0/main.c)
D_800BD3E0                          = 0x800BD3E0; // type:data     size:0x8      (static) (.data)   (src/codeseg0/main.c)
D_800BD3E8                          = 0x800BD3E8; // type:data     size:0x4               (.data)   (src/codeseg0/main.c)
r                                   = 0x800BD3EC; // type:data     size:0x1      (static) (.data)   (src/codeseg0/main.c)
g                                   = 0x800BD3ED; // type:data     size:0x1      (static) (.data)   (src/codeseg0/main.c)
b                                   = 0x800BD3EE; // type:data     size:0x1      (static) (.data)   (src/codeseg0/main.c)
D_800BD3F0                          = 0x800BD3F0; // type:data     size:0x4      (static) (.data)   (src/codeseg0/main.c)
D_800BD3F4                          = 0x800BD3F4; // type:data     size:0x4      (static) (.data)   (src/codeseg0/main.c)
D_800BD3F9                          = 0x800BD3F9; // type:data     size:0x1               (.data)   (src/codeseg0/main.c)
D_800BD3FC                          = 0x800BD3FC; // type:data     size:0x4      (static) (.data)   (src/codeseg0/main.c)
replyMsg                            = 0x800BD400; // type:data     size:0x20     (static) (.data)   (src/codeseg0/main.c)
framebufferIndex                    = 0x800BD420; // type:data     size:0x4      (static) (.data)   (src/codeseg0/main.c)
gGfxTaskIndex                       = 0x800BD424; // type:data     size:0x4               (.data)   (src/codeseg0/main.c)
D_800BD42C                          = 0x800BD42C; // type:data     size:0x1      (static) (.data)   (src/codeseg0/main.c)
D_800BD42D                          = 0x800BD42D; // type:data     size:0x1      (static) (.data)   (src/codeseg0/main.c)
D_800BD618                          = 0x800BD618; // type:data     size:0x1
D_800BD61A                          = 0x800BD61A; // type:data     size:0x2
D_800BD690                          = 0x800BD690; // type:data     size:0x54
D_800BD710                          = 0x800BD710; // type:data     size:0x14
D_800DCB10                          = 0x800DCB10; // type:data     size:0x10
D_800DD404                          = 0x800DD404; // type:data     size:0x4
D_800DEDE0                          = 0x800DEDE0; // type:data     size:0x1
D_800DEEA0                          = 0x800DEEA0; // type:data     size:0x4
D_800DF1A8                          = 0x800DF1A8; // type:data     size:0x4
D_800DF1AC                          = 0x800DF1AC; // type:data     size:0x8
D_800DF585                          = 0x800DF585; // type:data     size:0x1
D_800DF950                          = 0x800DF950; // type:data     size:0x2
D_800DFA90                          = 0x800DFA90; // type:data     size:0x14
D_800DFB08                          = 0x800DFB08; // type:data     size:0x14
D_800E1748                          = 0x800E1748; // type:data     size:0x4
jumptable                           = 0x800E1980;
__libmus_current_sched              = 0x800E1C5C;
__osThreadTail                      = 0x800E24A0; // type:data     size:0x8               (.data)   (libreultra/src/os/thread.c)
__osRunQueue                        = 0x800E24A8; // type:data     size:0x4               (.data)   (libreultra/src/os/thread.c)
__osActiveQueue                     = 0x800E24AC; // type:data     size:0x4               (.data)   (libreultra/src/os/thread.c)
__osRunningThread                   = 0x800E24B0; // type:data     size:0x4               (.data)   (libreultra/src/os/thread.c)
__osFaultedThread                   = 0x800E24B4; // type:data     size:0x4               (.data)   (libreultra/src/os/thread.c)
__osTimerList                       = 0x800E24C0; // type:data     size:0x4               (.data)   (libreultra/src/os/timerintr.c)
alGlobals                           = 0x800E24D0; // type:data     size:0x4               (.data)   (libreultra/src/audio/sl.c)
__osContinitialized                 = 0x800E24F0; // type:data     size:0x4               (.data)   (libreultra/src/io/controller.c)
__osPiDevMgr                        = 0x800E27D0; // type:data     size:0x1C              (.data)   (libreultra/src/io/pimgr.c)
__osPiTable                         = 0x800E27EC; // type:data     size:0x4               (.data)   (libreultra/src/io/pimgr.c)
__osCurrentHandle                   = 0x800E27F0; // type:data     size:0x8               (.data)   (libreultra/src/io/pimgr.c)
__osViDevMgr                        = 0x800E2800; // type:data     size:0x1C              (.data)   (libreultra/src/io/vimgr.c)
__additional_scanline               = 0x800E281C; // type:data     size:0x4               (.data)   (libreultra/src/io/vimgr.c)
osViModeTable                       = 0x800E2820; // type:data     size:0xD20             (.data)   (libreultra/src/io/vitbl.c)
osViModeFpalLpn1                    = 0x800E3540; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallpn1.c)
osViModeFpalLpf1                    = 0x800E3590; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallpf1.c)
osViModeFpalLan1                    = 0x800E35E0; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallan1.c)
osViModeFpalLaf1                    = 0x800E3630; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallaf1.c)
osViModeFpalLpn2                    = 0x800E3680; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallpn2.c)
osViModeFpalLpf2                    = 0x800E36D0; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallpf2.c)
osViModeFpalLan2                    = 0x800E3720; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallan2.c)
osViModeFpalLaf2                    = 0x800E3770; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpallaf2.c)
osViModeFpalHpn1                    = 0x800E37C0; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpalhpn1.c)
osViModeFpalHpf1                    = 0x800E3810; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpalhpf1.c)
osViModeFpalHan1                    = 0x800E3860; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpalhan1.c)
osViModeFpalHaf1                    = 0x800E38B0; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpalhaf1.c)
osViModeFpalHpn2                    = 0x800E3900; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpalhpn2.c)
osViModeFpalHpf2                    = 0x800E3950; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodefpalhpf2.c)
__osHwIntTable                      = 0x800E39A0; // type:data     size:0x28              (.data)   (libreultra/src/os/exceptasm.s)
__osPiIntTable                      = 0x800E39C8; // type:data     size:0x8               (.data)   (libreultra/src/os/exceptasm.s)
osClockRate                         = 0x800E39D0; // type:data     size:0x8               (.data)   (libreultra/src/os/initialize.c)
osViClock                           = 0x800E39D8; // type:data     size:0x4               (.data)   (libreultra/src/os/initialize.c)
__osShutdown                        = 0x800E39DC; // type:data     size:0x4               (.data)   (libreultra/src/os/initialize.c)
__OSGlobalIntMask                   = 0x800E39E0; // type:data     size:0x4               (.data)   (libreultra/src/os/initialize.c)
__osPreNMI                          = 0x800E39F0; // type:data     size:0x4               (.data)   (libreultra/src/os/seteventmesg.c)
__osViCurr                          = 0x800E3A60; // type:data     size:0x4               (.data)   (libreultra/src/io/vi.c)
__osViNext                          = 0x800E3A64; // type:data     size:0x4               (.data)   (libreultra/src/io/vi.c)
__osSiAccessQueueEnabled            = 0x800E3A70; // type:data     size:0x4               (.data)   (libreultra/src/io/siacs.c)
osViModeNtscLan1                    = 0x800E3A80; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodentsclan1.c)
osViModePalLan1                     = 0x800E3AD0; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodepallan1.c)
osViModeMpalLan1                    = 0x800E3B20; // type:data     size:0x50              (.data)   (libreultra/src/io/vimodempallan1.c)
__osPiAccessQueueEnabled            = 0x800E3B70; // type:data     size:0x4               (.data)   (libreultra/src/io/piacs.c)
__osPfsInodeCacheChannel            = 0x800E3BD0; // type:data     size:0x4               (.data)   (libreultra/src/io/contpfs.c)
__osPfsInodeCacheBank               = 0x800E3BD4; // type:data     size:0x1               (.data)   (libreultra/src/io/contpfs.c)
__osPfsLastChannel                  = 0x800E3BE0; // type:data     size:0x4               (.data)   (libreultra/src/io/contramread.c)
gspF3DEX2_NoN_fifoDataStart         = 0x800E3D20; // type:data     size:0x420
aspMainDataStart                    = 0x800E4140; // type:data     size:0x2C0
__osIntOffTable                     = 0x800EA3F0; // type:data     size:0x20     (static) (.rodata) (libreultra/src/os/exceptasm.s)
__osIntTable                        = 0x800EA410; // type:data     size:0x24     (static) (.rodata) (libreultra/src/os/exceptasm.s)
__libm_qnan_f                       = 0x800EA440; // type:data     size:0x4               (.rodata) (libreultra/src/gu/libm_vals.s)
__osRcpImTable                      = 0x800EA450; // type:data     size:0x80              (.rodata) (libreultra/src/os/setintmask.s)
idleLoopThread                      = 0x800EA700; // type:data     size:0x1B0    (static) (.bss)    (src/codeseg0/main.c)
idleLoopThreadStack                 = 0x800EA8B0; // type:data     size:0x1000   (static) (.bss)    (src/codeseg0/main.c)
mainLoopThread                      = 0x800EB8B0; // type:data     size:0x1B0    (static) (.bss)    (src/codeseg0/main.c)
mainLoopThreadStack                 = 0x800EBA60; // type:data     size:0x8000   (static) (.bss)    (src/codeseg0/main.c)
piMessages                          = 0x800F6C20; // type:data     size:0x400    (static) (.bss)    (src/codeseg0/main.c)
piMessageQ                          = 0x800F7020; // type:data     size:0x18     (static) (.bss)    (src/codeseg0/main.c)
viMode                              = 0x800F7038; // type:data     size:0x1      (static) (.bss)    (src/codeseg0/main.c)
D_800FE3F4                          = 0x800FE3F4; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_800FE416                          = 0x800FE416; // type:data     size:0x2               (.comm)   (src/codeseg0/common0.c)
D_800FE9E0                          = 0x800FE9E0; // type:data     size:0x8               (.comm)   (src/codeseg0/common0.c)
__osBaseCounter                     = 0x800FF3E4; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gFramebuffer                        = 0x800FF530; // type:data     size:0xC               (.comm)   (src/codeseg0/common0.c)
D_800FF53C                          = 0x800FF53C; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_800FF540                          = 0x800FF540; // type:data     size:0x6000            (.comm)   (src/codeseg0/common0.c)
__osThreadSave                      = 0x80105558; // type:data     size:0x1B0             (.comm)   (src/codeseg0/common0.c)
D_80106D30                          = 0x80106D30; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_80106D50                          = 0x80106D50; // type:data     size:0xBB8             (.comm)   (src/codeseg0/common0.c)
D_8010A938                          = 0x8010A938; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_8010A940                          = 0x8010A940; // type:data     size:0x68              (.comm)   (src/codeseg0/common0.c)
__osContPifRam                      = 0x80117DF0; // type:data     size:0x40              (.comm)   (src/codeseg0/common0.c)
errno                               = 0x80117ED0; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_80117ED8                          = 0x80117ED8; // type:data     size:0x270             (.comm)   (src/codeseg0/common0.c)
D_80118148                          = 0x80118148; // type:data     size:0x1               (.comm)   (src/codeseg0/common0.c)
D_80118160                          = 0x80118160; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
__Dom2SpeedParam                    = 0x801181D0; // type:data     size:0x74              (.comm)   (src/codeseg0/common0.c)
D_80119A5C                          = 0x80119A5C; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
diskrom_handle                      = 0x80119A68;
D_80119A78                          = 0x80119A78; // type:data     size:0x18              (.comm)   (src/codeseg0/common0.c)
__osViIntrCount                     = 0x80119A90; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gDynamic                            = 0x8011BC60; // type:data     size:0xDB80            (.comm)   (src/codeseg0/common0.c)
D_801297E0                          = 0x801297E0; // type:data     size:0x20              (.comm)   (src/codeseg0/common0.c)
D_8012C470                          = 0x8012C470; // type:data     size:0x2               (.comm)   (src/codeseg0/common0.c)
D_8012E158                          = 0x8012E158; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_8012FC90                          = 0x8012FC90; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gDisplaylist                        = 0x8012FD78; // type:data     size:0x8               (.comm)   (src/codeseg0/common0.c)
__osMaxControllers                  = 0x8012FD84; // type:data     size:0x1               (.comm)   (src/codeseg0/common0.c)
__osCurrentTime                     = 0x80138600; // type:data     size:0x8               (.comm)   (src/codeseg0/common0.c)
gStaticSegment                      = 0x80138684; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_80138688                          = 0x80138688; // type:data     size:0x8               (.comm)   (src/codeseg0/common0.c)
__CartRomHandle                     = 0x801386A0; // type:data     size:0x74              (.comm)   (src/codeseg0/common0.c)
__osEepPifRam                       = 0x801387D0; // type:data     size:0x40              (.comm)   (src/codeseg0/common0.c)
__osPiAccessQueue                   = 0x80138838; // type:data     size:0x18              (.comm)   (src/codeseg0/common0.c)
gDepthBuffer                        = 0x80138864; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
__Dom1SpeedParam                    = 0x8013B208; // type:data     size:0x74              (.comm)   (src/codeseg0/common0.c)
D_80168D0C                          = 0x80168D0C; // type:data     size:0x2               (.comm)   (src/codeseg0/common0.c)
D_80168D18                          = 0x80168D18; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gpVertex                            = 0x8016D170; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_8016D174                          = 0x8016D174; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gVertex                             = 0x8016D184; // type:data     size:0x8               (.comm)   (src/codeseg0/common0.c)
dmaMessageQ                         = 0x80197D58; // type:data     size:0x18              (.comm)   (src/codeseg0/common0.c)
D_80197DE0                          = 0x80197DE0; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
__osContLastCmd                     = 0x80197DE4; // type:data     size:0x1               (.comm)   (src/codeseg0/common0.c)
__osEepromTimerMsg                  = 0x80199100; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_80199524                          = 0x80199524; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
__osBaseTimer                       = 0x80199530; // type:data     size:0x20              (.comm)   (src/codeseg0/common0.c)
__osTimerCounter                    = 0x80199644; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
__muscontrol_flag                   = 0x80199648;
D_8019B940                          = 0x8019B940; // type:data     size:0x6018            (.comm)   (src/codeseg0/common0.c)
D_801A1958                          = 0x801A1958; // type:data     size:0x14              (.comm)   (src/codeseg0/common0.c)
D_801A1970                          = 0x801A1970; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_801A19EC                          = 0x801A19EC; // type:data     size:0x1               (.comm)   (src/codeseg0/common0.c)
gfxYieldBuf                         = 0x801A1A20; // type:data     size:0xC00             (.comm)   (src/codeseg0/common0.c)
__libmus_alglobals                  = 0x801A6850;
__osEepromTimer                     = 0x801A6AD8; // type:data     size:0x20              (.comm)   (src/codeseg0/common0.c)
D_801A6AF8                          = 0x801A6AF8; // type:data     size:0x288             (.comm)   (src/codeseg0/common0.c)
gfxFrameMsgQ                        = 0x801AC8B8; // type:data     size:0x18              (.comm)   (src/codeseg0/common0.c)
__osPfsInodeCache                   = 0x801ACA00; // type:data     size:0x100             (.comm)   (src/codeseg0/common0.c)
gGfxTask                            = 0x801ACB00; // type:data     size:0xD0              (.comm)   (src/codeseg0/common0.c)
__osEventStateTab                   = 0x801ACBE8; // type:data     size:0x78              (.comm)   (src/codeseg0/common0.c)
D_801AD470                          = 0x801AD470; // type:data     size:0x1               (.comm)   (src/codeseg0/common0.c)
D_801AE498                          = 0x801AE498; // type:data     size:0x8               (.comm)   (src/codeseg0/common0.c)
D_801AE528                          = 0x801AE528; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_801AE8B8                          = 0x801AE8B8; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gReverbFx                           = 0x801AE8C0;
__osFinalrom                        = 0x801AE8EC; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_801AE8FC                          = 0x801AE8FC; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
D_801AE914                          = 0x801AE914; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
__osPfsPifRam                       = 0x801AE980; // type:data     size:0x40              (.comm)   (src/codeseg0/common0.c)
__osEepromTimerQ                    = 0x801AEA18; // type:data     size:0x18              (.comm)   (src/codeseg0/common0.c)
gDramStack                          = 0x801AEA40; // type:data     size:0x400             (.comm)   (src/codeseg0/common0.c)
gpDisplaylist                       = 0x801B0808; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
gOutputBuffer                       = 0x801B0D40; // type:data     size:0x10000           (.comm)   (src/codeseg0/common0.c)
__osSiAccessQueue                   = 0x801C0D40; // type:data     size:0x18              (.comm)   (src/codeseg0/common0.c)
gpDynamic                           = 0x801C0D60; // type:data     size:0x4               (.comm)   (src/codeseg0/common0.c)
setCameraPosition                   = 0x801C1218; // type:function size:0x64              (.text)   (src/codeseg1/EB300.c)
D_801CC8CA                          = 0x801CC8CA; // type:data     size:0x2               (.comm)   (src/codeseg1/common1.c)
D_801CDB4C                          = 0x801CDB4C; // type:data     size:0x4               (.comm)   (src/codeseg1/common1.c)
D_801CDC65                          = 0x801CDC65; // type:data     size:0x1               (.comm)   (src/codeseg1/common1.c)
D_801CE4C6                          = 0x801CE4C6; // type:data     size:0x8               (.comm)   (src/codeseg1/common1.c)
gPerspNorm                          = 0x801CE4EA; // type:data     size:0x2               (.comm)   (src/codeseg1/common1.c)
D_801CE5AC                          = 0x801CE5AC; // type:data     size:0x2               (.comm)   (src/codeseg1/common1.c)
gPosition                           = 0x801CE5B0; // type:data     size:0x24              (.comm)   (src/codeseg1/common1.c)
